<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" fontSize="12" width="960" height="600"
		   borderStyle="solid" borderColor="#BC8E38" backgroundColor="#FDFDFD" creationComplete="initEvent()"
		    backgroundImage="{Resource.deskbg}"
		    themeColor="#F25010">
	<!--
	<mx:Style source="css/public.css">
	</mx:Style>
	-->
	<mx:Script>
		<![CDATA[
			import Class.Model.Desk;
			import Class.Model.Room;
			import Class.Resource;
			import Class.Server;
			import Class.WebResource;
			
			import com.fc.lami.Messages.DeskData;
			import com.fc.lami.Messages.PlayerData;
			import com.fc.lami.Messages.RoomData;
			
			import mx.controls.Alert;
			
			public var deskCpts:Array;
			
			[Bindable]
			public var room:Room;
			
			[Bindable]
			private var _plist:Array;
			
			private var roomData:RoomData
			
			[Bindable]
			private var roomMessage:String = '';
			
			public function init(roomData:RoomData):void
			{
				deskCpts = new Array();
				plist = room.getPlayerList();
				//dgroomlist.dataProvider = roomData.desks
				this.roomData = roomData
				restDesks();
			}
			
			public function initEvent():void
			{
				addEventListener(KeyboardEvent.KEY_DOWN,keyDownHandle)
			}
			
			public function keyDownHandle(event:KeyboardEvent):void
			{
				if( event.keyCode==13&&titalk.text!='')
				{
					pubTalk(); 
				}
			}
			
			public function pubTalk():void
			{	
				if(titalk.text=='')
					return
					
				Server.sendTalkMessage(titalk.text);
				titalk.text='';
			}
			
			private function set plist(list:Dictionary):void
			{
				_plist = new Array()
				for each (var player:PlayerData in list)
				{
					_plist.push(player);
				}
				restPlayers();
			}
			
			public function addRoomInfo(str:String):void
			{
				roomMessage =str + "\n" + roomMessage;
			}
			
			public function getDeskById(deskid:int):DeskData
			{
				for each(var desk:DeskData in roomData.desks)
				{
					if(deskid == desk.desk_id)
					{
						return desk;
					}
				}
				return null
			}
			
			//进入桌子
			public function enterDesk(player_id:int, desk_id:int, seat:int):void
			{
				var curDesk:DeskData = getDeskById(desk_id);
				curDesk.player_number++;
				
				addRoomInfo(Server.getPlayerName(room.getPlayerFromPlayerList(player_id))+'进入'+curDesk.desk_name);
			}
			
			//退出桌子
			public function leaveDesk(player_id:int, desk_id:int):void
			{
				var curDesk:DeskData = getDeskById(desk_id);
				curDesk.player_number--;
				
				addRoomInfo(Server.getPlayerName(room.getPlayerFromPlayerList(player_id))+'离开'+curDesk.desk_name);
			}
			
			
			
			
			//进入房间
			public function enterRoom(player:PlayerData):void
			{
				//nt.player
				if(room!=null)
				{
					room.enterRoom(player);
					plist = room.getPlayerList();
					
				}
				addRoomInfo(Server.getPlayerName(player)+"进入房间")
			}
			
			
			//退出房间 
			public function leaveRoom(player_id:int):void
			{
				var desk_id:int = Server.getPlayerDeskId(player_id);
				addRoomInfo(Server.getPlayerName(Server.getPlayer(player_id))+"离开房间");	
				room.removePlayer(player_id);
				plist = room.getPlayerList();
			}
			
			
			public function onGameStart(deskid:int):void
			{
				var curDesk:DeskData = getDeskById(deskid);
				curDesk.is_started=true;
			}
			
			public function onGameOver(deskid:int):void
			{
				var curDesk:DeskData = getDeskById(deskid);
				curDesk.is_started=false;
			}
			
			public function exitRoom():void
			{
				Server.ExitRoom();
			}
			
			/*
			public function is_startedLF(item:Object,column:DataGridColumn):String
			{
				if(item.is_started)
					return "开始";
				else
					return "等待";
			}
			
			
			public function player_numberLF(item:Object,column:DataGridColumn):String
			{				
				return item.player_number+'/4';
			}
			*/
			
			
			public function fastRequestEnterDesk():void
			{
				Server.enterDesk(-1,-1)
			}
			
			
			
			public function addItem(desk:DeskData):void
			{
				var it:DeskItemCpt = new DeskItemCpt();
				it.desk = desk;
				dgroomlist.addChild(it);
			}
			
			
			public function restDesks():void
			{
				dgroomlist.removeAllChildren();
				for each(var desk:DeskData in roomData.desks)
				{
					addItem(desk);
				}
			}
			
			public function restPlayers():void
			{
				playerlist.removeAllChildren();
				for each(var player:PlayerData in _plist)
				{
					var it:PlayerItemCpt = new PlayerItemCpt();
					it.player = player;
					playerlist.addChild(it);
				}
			}
			
			public function showWaitRoom():void
			{
				if(cb1.selected)
				{
					dgroomlist.removeAllChildren();
					for each (var desk:DeskData in roomData.desks)
					{
						if(!desk.is_started)
							addItem(desk);
					}
				}
				else
				{
					restDesks();
				}
			}
			
			
			
		]]>
	</mx:Script>
	<mx:Canvas x="27" y="57" width="591" height="29" borderStyle="none">
		<mx:Label text="信息滚动区" horizontalCenter="0" verticalCenter="0" fontSize="14"/>
	</mx:Canvas>
	
	<mx:VBox id="dgroomlist"  x="20" y="151" height="280" width="608" verticalGap="1"  >
	</mx:VBox>
	
	<!--
	<mx:DataGrid id="dgroomlist" x="10" y="52" width="680" height="379" doubleClickEnabled="true"   doubleClick="requestEnterDesk()">
		<mx:columns>
			<mx:DataGridColumn headerText="房间序号" dataField="desk_id" />
			<mx:DataGridColumn width="200" headerText="房间名称" dataField="desk_name"/>
			<mx:DataGridColumn headerText="状态"  dataField="is_started" labelFunction="is_startedLF" />
			<mx:DataGridColumn headerText="人数" dataField="player_number" labelFunction ="player_numberLF" />
			<mx:DataGridColumn headerText="加密" dataField="" />
			
			
		</mx:columns>
	</mx:DataGrid>
	-->
	
	<mx:TextArea x="20" y="450" width="608" height="99" text="{roomMessage}" editable="false" backgroundAlpha="0.0" borderStyle="none"/>
	<mx:TextInput id="titalk" x="91" y="558" width="467" backgroundColor="#D2A55A" borderColor="#BC8E38" borderStyle="solid" cornerRadius="5"/>
	
	<mx:Button x="566" y="557" label="提交" click="pubTalk()"/>
	
	<mx:Canvas x="652" y="72" width="286" height="120" borderStyle="none" borderColor="#030303">
		<mx:Image x="208" y="32" source="{WebResource.guestHead}"/>
		<mx:Label x="10" y="10" text="{Server.getPlayerName(Server.player)}" id="pname"/>
		<mx:Label x="10" y="38" text="{'分数：'+Server.player.score}" id="score"/>
		<mx:Label x="10" y="66" text="{'总局数：'+(Server.player.win+Server.player.lose)}" id="gamecount"/>
		<mx:Label x="10" y="94" text="{'胜率：'+(Server.player.win/(Server.player.win+Server.player.lose>0?Server.player.win+Server.player.lose:1)*100)+'%'}" id="winrate"/>
	</mx:Canvas>
	
	<mx:VBox id="playerlist" x="654" y="230" height="201" width="284" verticalGap="1" verticalPageScrollSize="100">
	</mx:VBox>
	<!--
	<mx:DataGrid x="698" y="209" width="252" height="326" dataProvider="{_plist}">
		<mx:columns>
			<mx:DataGridColumn headerText="ID" dataField="player_id" width="40"/>
			<mx:DataGridColumn headerText="名字" dataField="name" width="80"/>
			<mx:DataGridColumn headerText="等级" dataField="level"/>
		</mx:columns>
	</mx:DataGrid>
	-->
	
	
	
	<mx:Button x="708" y="477" 
			   skin="{Resource.fastBt}"
			   downSkin="{Resource.fastBt2}"
			   overSkin="{Resource.fastBt3}"
			   click="fastRequestEnterDesk()"/>
	
	
	<mx:LinkButton x="843" y="48" label="退出房间" fontSize="12" click="exitRoom()"  color="#FFFFFF"/>
	<mx:CheckBox id="cb1" x="660" y="46" label="只显示等待房间" change="showWaitRoom()" color="#FDFDFD"/>
	
	
</mx:Canvas>
