<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"  xmlns:ns1="Component.*" width="960" height="600" borderStyle="solid" borderColor="0x000000" backgroundColor="0xffffff"
		   verticalCenter="0" horizontalCenter="0" verticalScrollPolicy="off" horizontalScrollPolicy="off" creationComplete="initEvent()"  >
	
	
	<mx:Script>
		<![CDATA[
			import Class.Game;
			import Class.Model.Desk;
			import Class.Model.Player;
			import Class.Server;
			import Class.TimesCtr;
			
			import com.fc.lami.Messages.GameOverNotify;
			import com.fc.lami.Messages.PlayerData;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			[Bindable]
			public var desk:Desk;
			
			public var player:PlayerData; //玩家
			[Bindable]
			public var seatID:int;
			
			public var nextOtherPlayer_Cpt:OtherPlayer_Cpt;
			
			[Bindable]
			public var game:Game
			
			[Bindable]
			public var talkinfoStr:String=""; 
			
			[Bindable]
			public var gameinfoStr:String="";
			
			public var resetCpt:Reset_Cpt;
			public var canReset:Boolean = false;
			public var canShowReset:Boolean = false;
			//初始游戏
			public function init():void
			{
				game.matrix = mx;
				game.gamer.matrix = umx;
				game.timeCtr.optionTimeBar = optbar;
				game.timeCtr.sumTimeBar = sumbar;
				optCpt.game = game;
				game.initGame();
			}
			
			public function initEvent():void
			{
				addEventListener(KeyboardEvent.KEY_DOWN,keyDownHandle)
			}
			
			public function keyDownHandle(event:KeyboardEvent):void
			{
				 if( event.keyCode==13&&titalk.text!='')
				 {
					 pubTalk(); 
				 }
			}
			
			
			
			public function initDesk(desk:Desk):void
			{
				if(game.matrix==null)
				{
					init();
				}
				nextPlayer1.reset();
				nextPlayer2.reset();
				nextPlayer3.reset();
				resetGameAllData();
				player = Server.player;
				initSeat(desk);
			}
			
			
			//进入一个新房间后对所有数据进行重置
			public function resetGameAllData():void
			{
				game.cleanMatrix();
				game.gamer.cleanMatrix();
				game.gamer.isMyturn = false;
				game.gamer.isReady = false;
				game.gamer.isCold = true;
				game.legaled = true;
				game.haveSendCard = false;
				game.timeCtr.stop();
			}
			
			//初始位置
			public function initSeat(desk:Desk):void
			{
				nextOtherPlayer_Cpt = nextPlayer1;
				nextPlayer1.nextOtherPlayer_Cpt = nextPlayer2;
				nextPlayer2.nextOtherPlayer_Cpt = nextPlayer3;
				this.desk = desk;
				switch(player.player_id)
				{
					case desk.player_E_id: seatID = 3;break;
					case desk.player_N_id: seatID = 0;break;
					case desk.player_S_id: seatID = 2;break;
					case desk.player_W_id: seatID = 1;break;
				}
				var cpt:OtherPlayer_Cpt = nextOtherPlayer_Cpt;
				var index:int = seatID;
				do{
					index ++;
					if(index==4)
						index = 0
					cpt.player = Server.getPlayer(getPlayerIDbySeatID(index));
					cpt.seat = getDir(index);
					cpt = cpt.nextOtherPlayer_Cpt;
				}
				while(cpt != null)
			}
			
			//根据座位号获取选手
			private function getPlayerIDbySeatID(seatID:int):int
			{
				switch(seatID)
				{
					case 3: return desk.player_E_id;
					case 0: return desk.player_N_id;
					case 2: return desk.player_S_id;
					case 1: return desk.player_W_id;
				}
				return -1;
			}
			
			//根据座位号设置选手
			private function setPlayerIDbySeatID(seatID:int,playerID:int):void
			{
				switch(seatID)
				{
					case 3: desk.player_E_id = playerID;break;
					case 0: desk.player_N_id = playerID;break;
					case 2: desk.player_S_id = playerID;break;
					case 1: desk.player_W_id = playerID;break;
				}
			}
			
			//根据座位号获取方向
			public function getDir(seatID:int):String
			{
				switch(seatID)
				{
					case 0: return "南";
					case 1: return "西";
					case 2: return "北";
					case 3: return "东";
				}
				return "false";
			}
		    			
			//有人员进入
			public function enterPlayer(player_id:int, desk_id:int, seat:int):void
			{
				if(desk ==null || desk_id!=desk.desk_id)
					return

				initSeat(desk);
				addInfo(Server.getPlayer(player_id).name+"进入桌子");
			}
			
			
			//有人员离开
			public function leavePlayer(player_id:int, desk_id:int):void
			{
				if(desk ==null || desk_id!=desk.desk_id)
					return	
				initSeat(desk);
				addInfo(Server.getPlayer(player_id).name+"离开桌子");
			}
			
			
			public function click():void
			{
				//Alert.show(Game.getSendPoint().toString()+'_'+Game.gamer.keydwon);
			}
			
			public function addInfo(str:String):void
			{
				
				gameinfoStr = str + "\n" +gameinfoStr ;
			}
			
			public function addTalkInfo(str:String):void
			{
				talkinfoStr = str + "\n" +talkinfoStr;
			}
			
			//回到房间
			public function returnRoom():void
			{
				//this.visible = false;
				Server.app.removeChild(this);
				Server.leaveDesk(desk.desk_id);
				
			}
			
			//根据用户ID获取用户组建
			public function getOtherPlayerCptByPlayerId(playerid:int):OtherPlayer_Cpt
			{
				var cpt:OtherPlayer_Cpt = nextPlayer1;
				do{
					if(cpt.player!=null && cpt.player.player_id==playerid)
					{
						return cpt;
					}
					cpt = cpt.nextOtherPlayer_Cpt;
				}
				while(cpt!=null)
				return null	
			}
			
			//有人员破冰
			public function onPlayerPoBing(playerid:int):void
			{
				if (playerid == Server.player.player_id){
					game.gamer.isCold = false;
				}else{
					var cpt:OtherPlayer_Cpt = getOtherPlayerCptByPlayerId(playerid);
					if(cpt!=null)
						cpt.pobing = true;
				}
				addInfo("玩家"+Server.getPlayer(playerid).name+"已经破冰");
			}
			
			//有人员准备取消
			public function onPlayerReady(playerid:int,isReady:Boolean):void
			{
				if (playerid == Server.player.player_id){
					game.gamer.isReady = isReady;
				}else{
					var cpt:OtherPlayer_Cpt = getOtherPlayerCptByPlayerId(playerid);
					if(cpt!=null)
						cpt.ready = isReady;
				}
				
				if(isReady)
				{
					addInfo("玩家"+Server.getPlayer(playerid).name+"准备好了");
				}
				else
				{
					addInfo("玩家"+Server.getPlayer(playerid).name+"取消了准备");
				}
			}
			
			//有人员会合开始
			public function onPlayerStart(playerid:int):void
			{
				
				
				var cpt:OtherPlayer_Cpt = getOtherPlayerCptByPlayerId(playerid);
				
				if(cpt!=null)
				{
					cpt.gameing = true;
					addInfo("玩家"+cpt.player.name+"回合开始");
				}
			}
			
			//游戏结束
			public function onGameOver(gvn:GameOverNotify):void
			{
				addInfo("游戏结束");
				var rsCpt:Result_Cpt = new Result_Cpt()
					
				rsCpt.setRes(gvn);
				rsCpt.setStyle("verticalCenter","0");
				rsCpt.setStyle("horizontalCenter","0");	
				addChild(rsCpt);
				rsCpt.addEventListener(FlexEvent.REMOVE,removeResultHandle);
				//resetGameAllData();
			}
			
			
			public function removeResultHandle(event:Event):void
			{
				nextPlayer1.gameEnd();
				nextPlayer2.gameEnd();
				nextPlayer3.gameEnd();
				resetGameAllData();
			}
			
			
			
			public function onGameStart(canReset:Boolean):void
			{
				addInfo("游戏开始");
				if(resetCpt!=null)
					removeReset();
				
				this.canReset = canReset;
				canShowReset = true;
				nextPlayer1.ready = false;
				nextPlayer2.ready = false;
				nextPlayer3.ready = false;
			}
			
			
			public function showReset():void
			{
				if(!canShowReset)
					return
				else	
					canShowReset = false
					
				if(resetCpt!=null)
					removeReset();
				
				resetCpt = new Reset_Cpt();
				resetCpt.canReset = canReset;
				resetCpt.setStyle("verticalCenter","0");
				resetCpt.setStyle("horizontalCenter","0");	
				addChild(resetCpt);
			}

			public function removeReset():void
			{
				removeChild(resetCpt)
				resetCpt = null;
			}
			
			public function pubTalk():void
			{
				Server.sendTalkMessage(titalk.text);
				titalk.text='';
			}
			
			public function onPlayerReset(player:PlayerData):void
			{
				addInfo(player.name+"重置了发牌")
			}
			
		]]>
	</mx:Script>
	
	<ns1:Matrix_Cpt id="mx" y="134" borderStyle="solid" height="201" horizontalCenter="0">
	</ns1:Matrix_Cpt>
	
	<ns1:UserMatrix_Cpt id="umx" height="202" x="163" y="410" width="479">
		<mx:ProgressBar id="sumbar" width="465" label="" height="10" mode="manual" labelPlacement="center" y="24" x="0"/>
		<mx:ProgressBar id="optbar" height="10" width="465" label="" mode="manual" labelPlacement="center" x="0" y="36"/>
	</ns1:UserMatrix_Cpt>
	
	<!--玩家操作区-->
	<ns1:Opt_Cpt id="optCpt" height="177" y="398" x="155">
	</ns1:Opt_Cpt>
	
	<!--信息显示 -->
	
	
	<!--//其他玩家信息-->
	<ns1:OtherPlayer_Cpt id="nextPlayer1" x="5" y="143">
	</ns1:OtherPlayer_Cpt>
	
	<ns1:OtherPlayer_Cpt id="nextPlayer2"  x="192" y="10">
	</ns1:OtherPlayer_Cpt>
	
	<ns1:OtherPlayer_Cpt id="nextPlayer3" x="848" y="143">
	</ns1:OtherPlayer_Cpt>
	

	
	<mx:Label id="timer" x="9" y="376" text="{Server.timer}" color="#010101" width="138"/>
	
	<mx:LinkButton x="876" y="10" label="回到大厅" color="#020202" click="returnRoom()"/>
	
	<mx:Image id="turnStartImg" horizontalCenter="0" verticalCenter="0" source="image/start.png" alpha="0.0" visible="false" />
	
	<mx:Parallel id="turnStartEft" target="{turnStartImg}" effectEnd="turnStartImg.visible=false">
		<mx:Fade duration="1500" alphaFrom="1.0" alphaTo="0.0"></mx:Fade>
		<mx:Zoom duration="1500" zoomHeightFrom="1.0" zoomHeightTo="2.0" zoomWidthFrom="1.0" zoomWidthTo="2.0" > </mx:Zoom>
	</mx:Parallel>
	
	
	<mx:Label x="700" y="12" text="{'当前位置:'+(Server.room_cpt.room.roomData.room_id)+'房间 '+ (desk.desk_id+1)+'号座'}" color="#010101"/>
	
	

	<!--//游戏信息区-->
	<mx:Canvas x="10" y="10" width="143" height="116" borderStyle="solid"  borderColor="#000000">
		
		<mx:Label x="10" y="12" text="游戏信息" color="#010101"/>
		<mx:Label x="10" y="32" text="剩余牌数：{Server.game.leftCard}" color="#010101"/>
	</mx:Canvas>
	
	<!--玩家信息区-->
	
	<mx:Canvas id="useinfo" width="100" height="116" x="7" y="404" borderStyle="solid" borderColor="{game.gamer.isMyturn?0x990000:0x010101}" borderThickness="{game.gamer.isMyturn?2:1}"
			    verticalScrollPolicy="off" horizontalScrollPolicy="off">
		
		<mx:Label x="55" y="2" text="{getDir(seatID)}" color="#010101"/>
	
		<mx:Label x="0" y="56" text="{Server.player.name}" color="#010101"/>
		
		<mx:Label x="55" y="36" text="{game.gamer.isMyturn?'游戏中':'等待中'}" color="#010101"/>
		
		
		<mx:Label x="0" y="75" text="手牌数：{game.gamer.handCard.length}" color="#010101"/>
		
		
		<mx:Label x="56" y="20" text="{game.gamer.isCold?'未破冰':'已破冰'} " color="#010101"/>
		
		<mx:Label x="1" y="92" text="shift:{game.gamer.keydwon?'是':'否'}" color="black"/>
		
		<mx:Image x="5" y="5" width="50" height="50" source="image/man.png"/>
		
	</mx:Canvas>
	
	<mx:TabNavigator x="659" y="398" width="289" height="170">
		<mx:Canvas label="聊天" width="100%" height="100%">
			<mx:TextArea  width="100%" height="100%" backgroundAlpha="0.0" color="#010101" editable="false"  borderStyle="none" text="{talkinfoStr}" x="0" y="2"/>
		</mx:Canvas>
		<mx:Canvas label="出牌记录" width="100%" height="100%">
			<mx:TextArea  width="100%" height="100%" backgroundAlpha="0.0" color="#010101" editable="false"  borderStyle="none" text="{gameinfoStr}"/>
		</mx:Canvas>
	</mx:TabNavigator>
	
	<mx:Button x="896" y="571" label="提交" click="pubTalk()"/>
	<mx:TextInput id="titalk" x="659" y="571" width="229"/>
	
	
</mx:Canvas>
