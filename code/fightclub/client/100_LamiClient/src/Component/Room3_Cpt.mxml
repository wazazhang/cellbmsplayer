<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" fontSize="12" width="960" height="600"
		    creationComplete="initEvent()" backgroundImage="@Embed(source='../image/bg/deskbg2.png')">
	
	<mx:Script>
		<![CDATA[
			import Class.LanguageManager;
			import Class.MaskCtr;
			import Class.Model.Desk;
			import Class.Model.Room;
			import Class.Resource;
			import Class.Server;
			import Class.WebResource;
			
			import com.fc.lami.MessageCodec;
			import com.fc.lami.Messages.AutoEnterRequest;
			import com.fc.lami.Messages.AutoEnterResponse;
			import com.fc.lami.Messages.DeskData;
			import com.fc.lami.Messages.PlayerData;
			import com.fc.lami.Messages.RoomData;
			import com.fc.lami.Messages.RoomSnapShot;
			import com.fc.lami.ui.LamiAlert;
			import com.net.client.ClientEvent;
			
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;

			
			public var deskCpts:Array;
			
			[Bindable]
			public var room:Room;
			
//			[Bindable]
//			private var _plist:Array;
			
			[Bindable]
			private var roomData:RoomData
			
			[Bindable]
			private var roomMessage:String = '';
			
			
			[Bindable]
			private var _rooms:Array;
			
			
			public function initEvent():void
			{
				addEventListener(KeyboardEvent.KEY_DOWN,keyDownHandle);
				
			}
			
			public function startGame():void
			{
				Server.getClient().sendRequest(
					new AutoEnterRequest(), 
					onFirstLoginAutoEnter);		
				
				
				this.addChild(new TaskCpt());
				//LamiAlert.show('是否进入新手教程?','提示', Alert.YES|Alert.NO, null, learnHandler)
			}
			
			private function learnHandler(evt:CloseEvent):void {
				
				if (evt.detail == Alert.YES) {
					addChild(new Intro());
				}
			}
			
			/**
			 * 首次进入游戏自动选择个房间而不进入桌子
			 */
			private function onFirstLoginAutoEnter(event:ClientEvent) : void
			{
				if (event.getResponse() is AutoEnterResponse)
				{
					var aer:AutoEnterResponse = event.getResponse() as AutoEnterResponse;
					if (aer.result == AutoEnterResponse.AUTO_ENETR_RESULT_SUCCESS){
						//Server.onAutoEnterResponse(aer);
						enterRoom(aer.room);
					}else if (aer.result == AutoEnterResponse.AUTO_ENTER_RESULT_FAIL_NO_IDLE_SEAT){
						LamiAlert.show(LanguageManager.getText("loginCpt.myzw")); //没有空余座位
					}
				}
			}
			
			public function setRoomData(roomData:RoomData):void
			{
				room = new Room(roomData);
				
				deskCpts = new Array();
				//dgroomlist.dataProvider = roomData.desks
				this.roomData = roomData;
				restDesks();
				
			}
			
			public function keyDownHandle(event:KeyboardEvent):void
			{
				if( event.keyCode==13&&titalk.text!='')
				{
					pubTalk(); 
				}
			}
			
			public function pubTalk():void
			{	
				if(roomData == null)
				{
					addRoomInfo(LanguageManager.getText('roomCpt.jrfjtj'));  //进入房间后才能提交.
					return;
				}
					
				if(titalk.text=='')
					return;
					
				if (Server.sendTalkMessage(titalk.text))
					titalk.text='';
			}
			
//			private function set plist(list:Dictionary):void
//			{
//				_plist = new Array()
//				for each (var player:PlayerData in list)
//				{
//					_plist.push(player);
//				}
//				restPlayers();
//			}
			
			public function addRoomInfo(str:String):void
			{
				roomMessage =  roomMessage   +  str + "\n";
				roomta.validateNow(); 
				roomta.verticalScrollPosition=roomta.maxVerticalScrollPosition;		
				
			}
			
			public function getDeskById(deskid:int):DeskData
			{
				for each(var desk:DeskData in roomData.desks)
				{
					if(deskid == desk.desk_id)
					{
						return desk;
					}
				}
				return null
			}
			
			//进入桌子
			public function enterDesk(player_id:int, desk_id:int, seat:int):void
			{
				var curDesk:DeskData = getDeskById(desk_id);
				curDesk.player_number = room.getDesk(desk_id).player_number;
				
				//addRoomInfo(Server.getPlayerName(room.getPlayerFromPlayerList(player_id))+LanguageManager.getText('roomCpt.jr')+curDesk.desk_name+curDesk.desk_id);
			}
			
			//退出桌子
			public function leaveDesk(player_id:int, desk_id:int):void
			{
				var curDesk:DeskData = getDeskById(desk_id);
				curDesk.player_number = room.getDesk(desk_id).player_number;
				
				//addRoomInfo(Server.getPlayerName(room.getPlayerFromPlayerList(player_id))+LanguageManager.getText('roomCpt.lk')+curDesk.desk_name+curDesk.desk_id);
			}
			
			
			
			
			//进入房间
			public function playerEnterRoom(player:PlayerData):void
			{
				//nt.player
				if(room!=null)
				{
					room.enterRoom(player);
					restPlayers();
					
				}
				//addRoomInfo(Server.getPlayerName(player)+LanguageManager.getText('roomCpt.jrfj')); //进入房间
			}
			
			
			//退出房间 
			public function leaveRoom(player_id:int):void
			{
				var desk_id:int = Server.getPlayerDeskId(player_id);
				//addRoomInfo(Server.getPlayerName(Server.getPlayer(player_id))+LanguageManager.getText('roomCpt.lkfj'));	//离开房间
				room.removePlayer(player_id);
				restPlayers();
			}
			
			
			public function onGameStart(deskid:int):void
			{
				var curDesk:DeskData = getDeskById(deskid);
				curDesk.is_started=true;
			}
			
			public function onGameOver(deskid:int):void
			{
				var curDesk:DeskData = getDeskById(deskid);
				curDesk.is_started=false;
			}
			
			public function exitRoom():void
			{
				Server.ExitRoom();
			}
			
			
			public function fastRequestEnterDesk():void
			{
				MaskCtr.show('loading...');
				if(roomData == null)
				{
					Server.sendAutoEnter();
				}
				else
				{
					Server.enterDesk(-1,-1);
				}
			}
			
			
			
			public function addItem(desk:DeskData):void
			{
				var it:DeskItemCpt = new DeskItemCpt();
				it.desk = desk;
				dgroomlist.addChild(it);
			}
			
			
			public function restDesks():void
			{
				dgroomlist.removeAllChildren();
				for each(var desk:DeskData in roomData.desks)
				{
					addItem(desk);
				}
			}
			
			public function restPlayers():void
			{
				playerlist.removeAllChildren();
				for each(var player:PlayerData in room.getPlayerList())
				{
					var it:PlayerItemCpt = new PlayerItemCpt();
					it.player = player;
					playerlist.addChild(it);
				}
			}
			
			public function showWaitRoom():void
			{
				if(cb1.selected)
				{
					if (desk != null) {
						dgroomlist.removeAllChildren();
						for each (var desk:DeskData in roomData.desks)
						{
							if(!desk.is_started)
								addItem(desk);
						}
					}
				}
				else
				{
					restDesks();
				}
			}
			
			
			
			public function get rooms():Array
			{
				return _rooms
			}
			
			public function set rooms(val:Array):void
			{
				_rooms = val;
				restRooms();
			}
			
			public function setRoom(room:RoomSnapShot):void
			{
				for each(var r:RoomSnapShot in _rooms){
					if (r.room_id == room.room_id){
						r.player_number = room.player_number;
						r.player_number_max = room.player_number_max;
						r.room_name = room.room_name;
					}
				}
			}
			
			
			public function addRoom():void
			{
				
			}
			
			public function player_numberLF(item:Object,column:DataGridColumn):String
			{
				return item.player_number+'/' +item.player_number_max;
			}
			
			public function levelLF(item:Object,column:DataGridColumn):String
			{
				return "20";
			}
			
			public function modeLF(item:Object,column:DataGridColumn):String
			{
				return "dollar";
			}
			
			
			public function fastEnter():void
			{
				MaskCtr.show(LanguageManager.getText('roomCpt.deskItemCpt.jryx') ); //进入游戏中
				Server.sendAutoEnter();
				//Server.isAutoEnter = true;
				//Server.enterRoom(rooms[0].room_id)
			}
			
			
			public function addRoomItem(room:RoomSnapShot):void
			{
				var it:RoomItemCpt = new RoomItemCpt();
				it.setRoomData(room);
				vb1.addChild(it);
			}
			
			
			public function restRooms():void
			{
				vb1.removeAllChildren();
				for each(var room:RoomSnapShot in _rooms)
				{
					addRoomItem(room);
				}
			}
			
			public function enterRoom(roomData:RoomData):void
			{
				for each (var item:RoomItemCpt in vb1.getChildren()) {
					item.setSelectRoom(item.getRoomData().room_id == roomData.room_id);
				}
				setRoomData(roomData);		
				//desklist.addChild(roomCpt);
			}
		]]>
	</mx:Script>
	
			
	<mx:VBox id="vb1" x="26" y="103" height="468" width="180" horizontalScrollPolicy="off" verticalGap="2" verticalScrollPolicy="on" verticalScrollBarStyleName="VScrollBar"> 
	</mx:VBox>
	<mx:Label text="{LanguageManager.getText('loginCpt.fjxz')}"  x="27" y="40" color="#EBEBEB" fontSize="18" fontWeight="bold" width="180" textAlign="center"> 
		<mx:filters>
			<mx:GlowFilter color="0x000080" quality="5" ></mx:GlowFilter>
		</mx:filters>
	</mx:Label>
	<!--
	<mx:Button x="35" y="482" click="fastEnter()" skin="@Embed(source='../image/sjbt1.png')" overSkin="@Embed(source='../image/sjbt2.png')"/>
	-->
		
	
	<mx:VBox id="dgroomlist" visible="{roomData!=null}"  x="232" y="103" height="316" width="496" verticalGap="2" horizontalScrollPolicy="off" verticalScrollPolicy="on"  borderStyle="none" verticalScrollBarStyleName="VScrollBar"  >
		<mx:Canvas visible="{roomData==null}" height="316" width="496">
		</mx:Canvas>
	</mx:VBox>
	
	
	<mx:TextArea id="roomta" x="232" y="442" width="496" height="90" text="{roomMessage}" editable="false" backgroundAlpha="0.0" borderStyle="none" verticalScrollBarStyleName="VScrollBar" color="#CECECE"/>
	
	<mx:TextInput id="titalk" x="236" y="548" width="429" backgroundColor="#000000" borderColor="#000000" borderStyle="inset" cornerRadius="5" color="#FFFFFF" backgroundAlpha="0.7" borderThickness="2"/>
	
	<mx:Button x="673" y="547" label="{LanguageManager.getText('roomCpt.tj')}" buttonMode="true" click="pubTalk()" width="55"/>
	
	<mx:Canvas x="755" y="93" width="179" height="90" borderStyle="none" borderColor="#030303">
		<mx:Label x="0" y="0" text="{Server.getPlayerName(Server.player)}" id="pname" width="173" fontWeight="bold" textAlign="center" color="#D6D6D6" height="18"/>
		<mx:Label x="100" y="35" text="{Server.player.score}" id="score" width="79" height="18" color="#D6D6D6" textAlign="center"/>
		<mx:Image source="{Resource.head_bar}" x="0" y="20"  height="58" width="58" />
		<mx:Image complete="headimg.visible = true" visible="false"  id="headimg"  x="4" y="24" width="50" height="50" source="{Server.player.player_head_url}"/>
		<mx:Label x="59" y="53" text="{LanguageManager.getText('roomCpt.js')}：" width="45" textAlign="right" height="18" color="#D6D6D6"/>
		<mx:Label x="59" y="71" text="{LanguageManager.getText('roomCpt.sl')}：" width="45" textAlign="right" height="18" color="#D6D6D6"/>
		<mx:Label x="100" y="53" text="{(Server.player.win+Server.player.lose)}" id="gamecount" width="79" height="18" color="#D6D6D6" textAlign="center"/>
		<mx:Label x="100" y="71" text="{(Server.player.win/(Server.player.win+Server.player.lose&gt;0?Server.player.win+Server.player.lose:1)*100).toString().substr(0,4)+'%'}" id="winrate" width="79" height="18" color="#D6D6D6" textAlign="center"/>
		<mx:Label x="100" y="17" text="{Server.player.level}" id="level" width="79" height="18" color="#D6D6D6" textAlign="center"/>
		<mx:Label text="{LanguageManager.getText('roomCpt.dj')}：" width="45" textAlign="right" x="59" y="17" height="18" color="#D6D6D6"/>
		<mx:Label text="{LanguageManager.getText('roomCpt.jb')}：" width="45" textAlign="right" x="59" y="35" height="18" color="#D6D6D6"/>
	</mx:Canvas>
	
	<mx:TabNavigator x="755" y="190" width="179" height="297" backgroundColor="#373737" styleName="myTabNavigator">
		<mx:VBox  label="{LanguageManager.getText('roomCpt.hylb')}" 
				  id="friendlist" width="100%" height="100%" verticalGap="2"
				  horizontalScrollPolicy="off" verticalScrollPolicy="on"
				  verticalScrollBarStyleName="VScrollBar"  borderStyle="none">
		</mx:VBox>
		<mx:VBox  label="{LanguageManager.getText('roomCpt.fjlb')}"
				  id="playerlist" width="100%" height="100%" verticalGap="2" 
				  horizontalScrollPolicy="off" verticalScrollPolicy="on" 
				  verticalScrollBarStyleName="VScrollBar"  borderStyle="none" paddingLeft="2">
		</mx:VBox>
	</mx:TabNavigator>

	<!--
	<mx:ViewStack id="viewstack1" x="755" y="210" height="275" width="179" >
		<mx:VBox  label="{LanguageManager.getText('roomCpt.hylb')}" id="friendlist" width="100%" height="100%" verticalGap="2" horizontalScrollPolicy="off" verticalScrollPolicy="on" verticalScrollBarStyleName="VScrollBar" >
		</mx:VBox>
		<mx:Canvas label="d" width="100%" height="100%">
		</mx:Canvas>

		
		<mx:VBox  label="{LanguageManager.getText('roomCpt.fjlb')}" id="playerlist" width="100%" height="100%" verticalGap="2" horizontalScrollPolicy="off" verticalScrollPolicy="on" verticalScrollBarStyleName="VScrollBar" >
		</mx:VBox>
		
	</mx:ViewStack>
	
	<mx:ToggleButtonBar x="549" y="410"  dataProvider="{viewstack1}" width="179" styleName="myToggleButtonBar" color="#D1D1D1">
	</mx:ToggleButtonBar>
	-->
	
	<mx:Button x="744" y="495" 
			    buttonMode="true"
			   click="fastRequestEnterDesk()" 
			   width="203" height="90" 
			   label="{LanguageManager.getText('image.faststart')}" 
			   color="#FFCC99" fontSize="30" alpha="1.0" 
			   fillAlphas="[0.26, 0.27, 0.5, 0.5]" 
			   fillColors="[#17FFF1, #0089A6]" borderColor="#00358C" fontWeight="bold" skin="@Embed(source='../image/button/fastBt.png')" overSkin="@Embed(source='../image/button/fastBt2.png')" downSkin="@Embed(source='../image/button/fastBt3.png')" textRollOverColor="#EAEAEA" textSelectedColor="#EAEAEA" fontFamily="中易黑体">
		<!--
		<mx:filters>
			<mx:GlowFilter color="0x000080" quality="5" ></mx:GlowFilter>
		</mx:filters>
		-->
	</mx:Button>
	
	<mx:LinkButton x="632" y="22" label="{LanguageManager.getText('roomCpt.tcfj')}" fontSize="12" click="exitRoom()"  color="#FFFFFF" visible="false"/>
	<mx:CheckBox id="cb1" x="770" y="44" label="{LanguageManager.getText('roomCpt.kxpz')}" change="showWaitRoom()" color="#FDFDFD" textSelectedColor="#FFFFFF" textRollOverColor="#FFFFFF" textAlign="center"/>
	
	<!--
	<mx:Label text="{LanguageManager.getText('roomCpt.xxgdq')}" fontSize="14" x="431" y="44" color="#ECECEC"/>
	-->
	

	
</mx:Canvas>
